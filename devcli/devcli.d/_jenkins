# vim: ft=sh
use "secrets"

# Jenkins configurations
load_conf jenkins_conf
load_conf jenkins_jobs

function __status_color() {
  case ${1} in
    SUCCESS) green_box ${1};;
    FAILURE) red_box ${1};;
    null)    magenta_box 'RUNNING';;
    *)       yellow_box ${1};;
  esac
}

function __formatted_status() {
  local job_alias="${1}"
  local job_status="${2}"

  job="${job_alias}|${jenkins_jobs[${job_alias}]}" # compose job name

  line=$(printf ".%.0s" {1..60}) # large sequence of '.' for formatting
  # this printf uses the line above to create 'job.....[STATUS]' display
  printf "%s%s%s\n" "$(in_yellow ${job})"  "${line:${#job}}" "$(__status_color ${job_status})"
}

function __jenkins_result_url() {
  local job="${1?'missing job name'}"
  result_api_url="${jenkins_conf['url']}/${job}/lastBuild/api/json?tree=result"
  log "jenkins api call: ${result_api_url}"
  echo "${result_api_url}"
}

function __jenkins_creds() {
  if [[ -n ${jenkins_conf['user']} || -n ${jenkins_conf['pass']} ]]; then
    user="$(get_secret ${jenkins_conf['user']})"
    pass="$(get_secret ${jenkins_conf['pass']})"
    [[ -z "${user}" || -z "${pass}" ]] && auth="" || auth=" --auth ${user}:${pass} "
    log "user=${user} pass=${pass}"
  fi
  echo "${auth}"
}

function ci_status() {
  local filter_by="${1-.*}"
  local credentials="$(__jenkins_creds)"
  log "filtering by: ${filter_by}"
  for k in "${!jenkins_jobs[@]}"; do
    if [[ ${k} =~ ${filter_by} ]]; then
      log "matched job: ${k}, fetching lastBuild result"
      full_request="http ${credentials} --body $(__jenkins_result_url ${jenkins_jobs[${k}]})"
      log "calling: ${full_request}"
      __formatted_status "${k}" "$(${full_request} | jq -r .result )"
    fi
  done
}
